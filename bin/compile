#!/bin/sh

indent() {
  sed -u 's/^/       /'
}

log() {
  echo $1 | indent
}

log_section() {
  echo "-----> $1"
}

BUILD_DIR=$1
CACHE_DIR=$2

mkdir -p ${CACHE_DIR}
mkdir -p ${CACHE_DIR}./plenv

export PLENV_ROOT=${BUILD_DIR}/.plenv

log "Restoring perl cache"
cp -a ${CACHE_DIR}./plenv ${PLENV_ROOT}

if [ ! -e "${PLENV_ROOT}" ]; then
  log_section "Downloading plenv..."
  git clone https://github.com/tokuhirom/plenv.git ${PLENV_ROOT} 2>&1 | indent
fi

export PATH=${PLENV_ROOT}/bin:$PATH
eval "$(plenv init -)"

if [ ! -e "${PLENV_ROOT}/plugins/perl-build" ]; then
  log_section "Downloading perl-build..."
  git clone https://github.com/tokuhirom/Perl-Build.git ${PLENV_ROOT}/plugins/perl-build 2>&1 | indent
fi

cd $BUILD_DIR

if [ -e ".perl-version" ]; then
  PERL_VERSION=`cat .perl-version`
else
  echo "No perl version defined"
  exit 1
fi

log "Perl version required: ${PERL_VERSION}"

if ! plenv versions | grep "${PERL_VERSION}"; then
  log_section "Installing required perl..."
  plenv install ${PERL_VERSION} 2>&1 | indent
  plenv rehash

  log_section "Installing base perl dependencies..."
  plenv install-cpanm 2>&1 | indent
  cpanm Carton Starman 2>&1 | indent
fi

log "Installed perls:"
plenv versions 2>&1 | indent

log_section "Installing dependencies with Carton..."
log "Restoring module cache"
mkdir -p ${CACHE_DIR}/local
cp -a ${CACHE_DIR}/local local
carton install --deployment 2>&1 | indent

log "Replacing perl cache"
rm -rf ${CACHE_DIR}/.plenv
cp -a ${PLENV_ROOT} ${CACHE_DIR}/.plenv

log "Replacing module cache"
rm -rf ${CACHE_DIR}/local
cp -a local ${CACHE_DIR}/
